#mainTitle {
	text-align: center;
}

#screenArea {
	text-align: center;
	margin-bottom: 0;
}

#mainScreen {
	border: 16px solid black;
	image-rendering: pixelated;
}

#pancakeScreen {
	width: 480px;
	height: 270px;
	border: solid black;
	border-width: 73px 32px;
	image-rendering: pixelated;
}

#pancakeScreen:not(.enabled), #pancakeScreen:not(.connected) {
	display: none;
}

#controlArea {
	text-align: center;
}

#controlAreaInner {
	display: inline-block;
	min-width: 544px;
	text-align: left;
}

#controlTabArea {
	display: flex;
	justify-content: space-between;
	align-items: center;
	grid-template-columns: auto 1fr auto;
	margin-top: 0.5em;
	margin-bottom: 1em;
}

#ledPane {
	color: #773333;
	font-size: 200%;
}

#ledPane.lighting {
	color: #ff5555;
}

#tabPane {
	text-align: center;
}

#volumePane {
	display: flex;
	align-items: center;
}

#volumeSwitch {
	display: none;
}

label[for="volumeSwitch"] {
	cursor: pointer;
}

#volumeSwitch:checked + label #soundOnIcon {
	display: none;
}

#volumeSwitch:not(:checked) + label #soundOffIcon {
	display: none;
}

#volumeSlider {
	margin-left: 0.5em;
	width: 7em;
}

.controlRadio {
	display: none;
}

#controlRadioKey:checked ~ * label[for="controlRadioKey"] {
	background-color: lightgray;
}

#controlRadioPad:checked ~ * label[for="controlRadioPad"] {
	background-color: lightgray;
}

#controlRadioData:checked ~ * label[for="controlRadioData"] {
	background-color: lightgray;
}

#controlRadioIo:checked ~ * label[for="controlRadioIo"] {
	background-color: lightgray;
}

#controlRadioSystem:checked ~ * label[for="controlRadioSystem"] {
	background-color: lightgray;
}

#controlRadioKey:not(:checked) ~ * #keyForm {
	display: none;
}

#controlRadioPad:not(:checked) ~ * #padForm {
	display: none;
}

#controlRadioPad:not(:checked) ~ * #padForm {
	display: none;
}

#controlRadioData:not(:checked) ~ * #dataForm {
	display: none;
}

#controlRadioIo:not(:checked) ~ * #ioForm {
	display: none;
}

#controlRadioSystem:not(:checked) ~ * #systemForm {
	display: none;
}

.controlTab {
	color: inherit;
	text-decoration: none;
	border: 1px solid black;
	padding: 0.5em;
	margin-right: 0.3em;
	cursor: pointer;
	user-select: none;
}

#padForm {
	position: relative;
	width: 540px;
	height: 210px;
}

#padForm .padButton {
	position: absolute;
	width: 80px;
	height: 80px;
	border: 1px solid black;
	border-radius: 50%;
	cursor: pointer;
	font-size: 50px;
	display: flex;
	justify-content: center;
	align-items: center;
}

#padForm .padButton.padRow1 {
	top: 00px;
}

#padForm .padButton.padRow2 {
	top: 70px;
}

#padForm .padButton.padRow3 {
	top: 140px;
}

#padForm .padButton.padCol1 {
	left: 20px;
}

#padForm .padButton.padCol2 {
	left: 90px;
}

#padForm .padButton.padCol3 {
	left: 160px;
}

#padForm .padButton.padCol4 {
	right: 160px;
}

#padForm .padButton.padCol5 {
	right: 90px;
}

#padForm .padButton.padCol6 {
	right: 20px;
}

#padButtonLeft:before {
	content: "◀";
}

#padButtonRight:before {
	content: "▶";
}

#padButtonUp:before {
	content: "▲";
}

#padButtonDown:before {
	content: "▼";
}

#padButtonEnter:before {
	content: "⏎";
}

#padButtonSpace:before {
	content: "␣";
}

#padButtonX:before {
	content: "X";
}

#padButtonY:before {
	content: "Y";
}

#padButtonLeft, #padButtonRight, #padButtonUp, #padButtonDown {
	background-color: #ffffff;
	color: #c0c0c0;
}

#padButtonEnter {
	background-color: #ff0000;
	color: #c00000;
}

#padButtonSpace {
	background-color: #ffff00;
	color: #c0c000;
}

#padButtonX {
	background-color: #0000ff;
	color: #0000c0;
}

#padButtonY {
	background-color: #00ff00;
	color: #00c000;
}

#dataForm {
	text-align: center;
	width: 544px;
}

#textInputArea {
	width: 512px;
}

#textControlButtonAreaWrapper {
	width: 512px;
	display: inline-block;
}

#textControlButtonArea {
	display: flex;
	padding-top: 0.5em;
}

#textControlButtonArea button {
	padding: 0.3em 0.5em;
}

#textControlButtonArea button:not(:last-child) {
	margin-right: 0.5em;
}

#textControlButtonArea #textInputButton {
	margin-right: auto;
}

#virtualEepromArea {
	margin-top: 1em;
}

#virtualEepromControlArea {
	text-align: left;
	margin-bottom: 0.5em;
}

#virtualEepromTemporalIndicator {
	margin-left: 0.5em;
}

#virtualEepromTemporalIndicator:not(.temporal) {
	display: none;
}

#virtualEepromSelectArea {
	display: flex;
}

#virtualEepromSelect {
	flex-grow: 1;
}

#virtualEepromControlArea button, #virtualEepromSelectArea button {
	margin-left: 0.5em;
	padding: 0.3em 0.5em;
}

#virtualEepromHelperArea {
	display: none;
}

#urlExportArea {
	margin-top: 0.7em;
	text-align: left;
}

#urlExportArea .checkSet {
	white-space: nowrap;
}

#urlExportArea .checkSet:not(:first-of-type) {
	margin-left: 0.5em;
}

#urlExportConfigArea {
	margin-top: 0.5em;
	margin-bottom: 0.5em;
}

#urlExportButton {
	padding: 0.3em 0.5em;
}

.configField {
	display: table;
}

.configRow {
	display: table-row;
}

.configName {
	display: table-cell;
	padding-right: 0.5em;
}

.configValue {
	display: table-cell;
	padding-bottom: 0.3em;
}

.screenKeyMain {
	display: grid;
	grid-template-rows: repeat(6, 2em);
	grid-template-columns: repeat(14, 1fr);
	width: 540px;
}

.screenKey {
	border: 1px solid black;
	border-collapse: collapse;
	display: flex;
	justify-content: center;
	align-items: center;
	margin-top: -1px;
	margin-left: -1px;
	cursor: pointer;
	user-select: none;
}

.specialKeyCheck {
	display: none;
}

.specialKey-caps:checked ~ .screenKey[data-special-key="caps"] {
	background-color: lightgray;
}

.specialKey-shift:checked ~ .screenKey[data-special-key="shift"] {
	background-color: lightgray;
}

.specialKey-ctrl:checked ~ .screenKey[data-special-key="ctrl"] {
	background-color: lightgray;
}

.specialKey-alt:checked ~ .screenKey[data-special-key="alt"] {
	background-color: lightgray;
}

.specialKey-caps:checked ~ .screenKey .nocapsed {
	display: none;
}

.specialKey-caps:not(:checked) ~ .screenKey .capsed {
	display: none;
}

.specialKey-shift:checked ~ .screenKey .noshifted {
	display: none;
}

.specialKey-shift:not(:checked) ~ .screenKey .shifted {
	display: none;
}

.specialKey-alt:checked ~ .screenKey .noalted {
	display: none;
}

.specialKey-alt:not(:checked) ~ .screenKey .alted {
	display: none;
}

.hidden {
	display: none;
}

#phisicalUartArea.uartConnected .uartNotConnectedMessage {
	display: none;
}

#phisicalUartArea:not(.uartConnected) .uartConnectedMessage {
	display: none;
}

#phisicalUartArea.webSerialSupported .webSerialUnsupportedMessage {
	display: none;
}

#virtualUartDevicesArea {
	margin-top: 0.5em;
}
